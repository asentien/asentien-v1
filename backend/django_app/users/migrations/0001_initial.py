# Generated by Django 3.2 on 2022-04-07 13:06

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import utilities.storage_backends
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('email', models.EmailField(db_index=True, max_length=255, unique=True, verbose_name='Email address')),
                ('first_name', models.CharField(db_index=True, max_length=50, verbose_name='First name')),
                ('last_name', models.CharField(db_index=True, max_length=50, verbose_name='Last name')),
                ('date_of_birth', models.DateField(db_index=True, max_length=10, verbose_name='Birthday')),
                ('username', models.SlugField(default='a8de4baa-2850-4534-85a8-a4730c44a29f', max_length=115, unique=True, verbose_name='Username')),
                ('last_notification_read_time', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_asentient', models.BooleanField(db_index=True, default=False)),
                ('is_accelerator', models.BooleanField(db_index=True, default=False)),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('following', models.ManyToManyField(related_name='followers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('avatar', models.FileField(default='profile_avatar/default_profile_avatar.png', storage=utilities.storage_backends.PublicMediaStorage(), upload_to='avatar/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpg', 'jpeg'])], verbose_name='Avatar')),
                ('cover', models.FileField(default='profile_cover/default_profile_cover.png', storage=utilities.storage_backends.PublicMediaStorage(), upload_to='cover/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpg', 'jpeg'])], verbose_name='Cover')),
                ('education', models.CharField(db_index=True, default='N/A', max_length=134, verbose_name='Education')),
                ('occupation', models.CharField(db_index=True, default='N/A', max_length=134, verbose_name='Occupation')),
                ('bio', models.TextField(blank=True, max_length=143, verbose_name='Bio')),
                ('aptitudes', models.CharField(blank=True, max_length=134, verbose_name='Aptitudes')),
                ('gender', models.CharField(blank=True, db_index=True, max_length=25, verbose_name='Gender')),
                ('pronouns', models.CharField(blank=True, db_index=True, max_length=25, verbose_name='Pronouns')),
                ('country', models.CharField(blank=True, db_index=True, max_length=85, verbose_name='Country')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Asentient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AcceleratorDeactivatedUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deactivated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deactivated', to=settings.AUTH_USER_MODEL)),
                ('deactivator_accelerator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deactivator', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Accelerator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
    ]
