# Generated by Django 3.2 on 2022-04-07 13:06

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import utilities.storage_backends
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('title', models.CharField(blank=True, max_length=234, verbose_name='Title')),
                ('content', models.FileField(blank=True, null=True, storage=utilities.storage_backends.PublicMediaStorage(), upload_to='content/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpg', 'jpeg', 'gif', 'mp4'])], verbose_name='Images and Videos')),
                ('body', models.TextField(blank=True, db_index=True, max_length=10001, verbose_name='Body')),
                ('is_comment', models.BooleanField(default=False)),
                ('is_share', models.BooleanField(default=False)),
                ('reports', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL)),
                ('dislikes', models.ManyToManyField(blank=True, related_name='dislikes', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank=True, related_name='likes', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ancestor', to='posts.post')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AcceleratorDeactivatedPosts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deactivated_post', to='posts.post')),
                ('post_deactivated_author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_deactivated_author', to=settings.AUTH_USER_MODEL)),
                ('post_deactivator_accelerator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_deactivator', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BasePost',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('posts.post',),
        ),
        migrations.CreateModel(
            name='PostComment',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('posts.post',),
        ),
        migrations.CreateModel(
            name='PostShare',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('posts.post',),
        ),
    ]
